#!/bin/bash
# $Id: chklnks,v 1.106 2016/04/19 08:45:19 fulford Exp fulford $
# $Source: /src/merlin/usr/local/etc/RCS/chklnks,v $
# $Revision: 1.106 $
# Author C W Fulford.
# Copyright 2014 (c) C W Fulford.
# Licensed for public use under the LGPL, .
# For assistance contact fulford@fulford.net 0709 229 5385
########################################################################
cmd=`basename $0`
syntax="$cmd [-d] [-h <hostid> [-r] [-v] [[-a]|[<dir_name> <dir_name> ...]]|[-V]"
while [ $# -gt 0 ] ;do
	case $1 in 
		-a) all=0;shift;;
		-d) set -x;debug=:;shift;;
		-h) hostid=$2;shift 2;;
		-r) action=delete;shift;;
		-v) verbose=0;shift;;
		-V) echo "$cmd $Revision: 1.106 $ $Date: 2016/04/19 08:45:19 $"|awk '{print $1,$3,$6}';exit;;  
		 /*) paths="$paths $1";shift;;
	 	*) echo "$syntax" >&2;exit;;
	esac
done
action=${action:-"echo"}
all=${all:=1}
[ $all -a "$paths" ] &&{
	echo "$cmd: can't specify directories with the -a option" >&2
	echo "syntax: $syntax" >&2
	exit 1
}
tdf=/tmp/df-$$
tmounts=/tmp/mounts-$$
verbose=${verbose:-1}
if [ "$hostid" ]; then
	if nc -zw 2 $hostid 22 ;then
		rchk="ssh $hostid"
		ssh $hostid cat /proc/mounts > $tmounts	
		ssh $hostid "df -l" > $tdf	
	else	
		echo "$cmd: ssh not available on $hostid" >&2
		exit 1
	fi
else
	cp /proc/mounts $tmounts
	df -l >$tdf
fi
		
if [ $all ];then
	paths=`awk '{ if (NR==FNR){
			# get mount options
			split($4,r,",")
			mpt[$2] = r[1] 
			#print $2 " is " mpt[$2] 
		}
		if (NR != FNR){
		       	if($1 !~ /Filesystem/){
				# Put local file systems mount points in array
				fss[$6]=mpt[$6]
				#print $6
				#print fss[$6]
			}
		}
	}END{
		for (i in fss){
			# use mount point as index into arrays 
			if (mpt[i] ~ /rw/ ){
				print i
			}
		}
	}' $tmounts $tdf`
fi
paths=${paths:-"./"}
[ "$verbose" ] &&{
	echo "$cmd: paths = "$paths
}
for d in $paths;do
	if [ $verbose ];then
		echo "$cmd: checking directory $d"
	fi
	$rchk sudo find -L $d -xdev -type l -print |
	while read f ;do
		if [ $action == "delete" ];then
			if $rchk "sudo rm $f 2>/dev/null" ;then 
				if [ $verbose ];then
					echo "$cmd: $f dead link removed" >&2
				fi
			else
				echo "$cmd: could not remove $f" >&2
			fi
		else
			$action "$cmd: found dead link $f" >&2
		fi
	done
done
sudo rm $tdf $tmounts
